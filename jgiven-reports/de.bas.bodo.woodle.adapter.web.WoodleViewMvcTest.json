{
  "className": "de.bas.bodo.woodle.adapter.web.WoodleViewMvcTest",
  "name": "Woodle View Mvc",
  "scenarios": [
    {
      "className": "de.bas.bodo.woodle.adapter.web.WoodleViewMvcTest",
      "testMethodName": "should_display_summary_and_store_in_s3",
      "description": "should display summary and store in s3",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "user is on homepage",
              "words": [
                {
                  "value": "user is on homepage"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 2096708,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "mock mvc is configured",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "mock mvc is configured"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@57ed02e6",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@57ed02e6"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1483041,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "errorMessage": "org.mockito.exceptions.verification.WantedButNotInvoked: \nWanted but not invoked:\nsoftware.amazon.awssdk.services.s3.S3Client#0 bean.putObject(\n    \u003cany software.amazon.awssdk.services.s3.model.PutObjectRequest\u003e,\n    \u003cany software.amazon.awssdk.core.sync.RequestBody\u003e\n);\n-\u003e at software.amazon.awssdk.services.s3.S3Client.putObject(S3Client.java:19072)\nActually, there were zero interactions with this mock.\n",
          "stackTrace": [
            "software.amazon.awssdk.services.s3.S3Client.putObject(S3Client.java:19072)",
            "de.bas.bodo.woodle.adapter.web.WoodleViewMvcTest.should_display_summary_and_store_in_s3(WoodleViewMvcTest.java:167)",
            "java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)",
            "org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)",
            "org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "java.base/java.util.ArrayList.forEach(Unknown Source)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "java.base/java.util.ArrayList.forEach(Unknown Source)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)",
            "org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)",
            "org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)",
            "org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)",
            "org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)",
            "org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)",
            "org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)",
            "org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)",
            "org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)"
          ],
          "durationInNanos": 19871035542
        }
      ],
      "durationInNanos": 19871035542
    },
    {
      "className": "de.bas.bodo.woodle.adapter.web.WoodleViewMvcTest",
      "testMethodName": "user_can_navigate_through_scheduling_process",
      "description": "user can navigate through scheduling process",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "user is on homepage",
              "words": [
                {
                  "value": "user is on homepage"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 129750,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "mock mvc is configured",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "mock mvc is configured"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@57ed02e6",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@57ed02e6"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 569667,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user is on homepage",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user is on homepage"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 139458,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user has test data",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user has test data"
                },
                {
                  "value": "Alice",
                  "argumentInfo": {
                    "argumentName": "name",
                    "formattedValue": "Alice"
                  }
                },
                {
                  "value": "alice@example.com",
                  "argumentInfo": {
                    "argumentName": "email",
                    "formattedValue": "alice@example.com"
                  }
                },
                {
                  "value": "My Poll",
                  "argumentInfo": {
                    "argumentName": "title",
                    "formattedValue": "My Poll"
                  }
                },
                {
                  "value": "Some description",
                  "argumentInfo": {
                    "argumentName": "description",
                    "formattedValue": "Some description"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 290500,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks schedule event button",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks schedule event button"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 133209,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step1 form",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step1 form"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 76834,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks next",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks next"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 52459,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see step2 form",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see step2 form"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 108000,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "step2 form should have all required fields",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "step2 form should have all required fields"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 121583,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks back",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks back"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 106292,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see step1 form with previous data",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see step1 form with previous data"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 190959,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step2 form",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step2 form"
                },
                {
                  "value": "2024-03-20",
                  "argumentInfo": {
                    "argumentName": "date",
                    "formattedValue": "2024-03-20"
                  }
                },
                {
                  "value": "10:00",
                  "argumentInfo": {
                    "argumentName": "startTime",
                    "formattedValue": "10:00"
                  }
                },
                {
                  "value": "11:00",
                  "argumentInfo": {
                    "argumentName": "endTime",
                    "formattedValue": "11:00"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 501083,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks next",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks next"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 54042,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see step3 form",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see step3 form"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 200834,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "step3 form should have expiry date",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "step3 form should have expiry date"
                },
                {
                  "value": "2024-06-20",
                  "argumentInfo": {
                    "argumentName": "expiryDate",
                    "formattedValue": "2024-06-20"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 511000,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks back",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks back"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 44917,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see step2 form with previous data",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see step2 form with previous data"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 82875,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step3 form",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step3 form"
                },
                {
                  "value": "2024-06-20",
                  "argumentInfo": {
                    "argumentName": "expiryDate",
                    "formattedValue": "2024-06-20"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 161459,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks create poll",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks create poll"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 225583,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see summary page",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see summary page"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 64208,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "summary page should show all entered data",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "summary page should show all entered data"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 378333,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "summary page should show event url",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "summary page should show event url"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 54417,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "durationInNanos": 13000417
        }
      ],
      "durationInNanos": 13000417,
      "executionStatus": "SUCCESS"
    },
    {
      "className": "de.bas.bodo.woodle.adapter.web.WoodleViewMvcTest",
      "testMethodName": "root_path_should_redirect_to_index_html",
      "description": "root path should redirect to index html",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "user is on homepage",
              "words": [
                {
                  "value": "user is on homepage"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 124458,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "mock mvc is configured",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "mock mvc is configured"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@57ed02e6",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@57ed02e6"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 282291,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user visits root path",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user visits root path"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1385417,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should be redirected to index html",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should be redirected to index html"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1311458,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "durationInNanos": 5401708
        }
      ],
      "durationInNanos": 5401708,
      "executionStatus": "SUCCESS"
    }
  ],
  "tagMap": {}
}