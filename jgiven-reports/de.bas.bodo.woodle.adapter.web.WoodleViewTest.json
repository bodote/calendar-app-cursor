{
  "className": "de.bas.bodo.woodle.adapter.web.WoodleViewTest",
  "name": "Woodle View",
  "scenarios": [
    {
      "className": "de.bas.bodo.woodle.adapter.web.WoodleViewTest",
      "testMethodName": "should_display_summary_and_store_in_s3",
      "description": "should display summary and store in s3",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 6975583,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 334625,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 231250,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set s3 client",
              "words": [
                {
                  "value": "set s3 client"
                },
                {
                  "value": "s3Client",
                  "argumentInfo": {
                    "argumentName": "s3Client",
                    "formattedValue": "s3Client"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 4681208,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "errorMessage": "java.lang.AssertionError: Status expected:\u003c200\u003e but was:\u003c303\u003e",
          "stackTrace": [
            "org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)",
            "org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)",
            "org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:637)",
            "org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)",
            "de.bas.bodo.woodle.adapter.web.WoodleViewTest.should_display_summary_and_store_in_s3(WoodleViewTest.java:159)",
            "java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)",
            "org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)",
            "org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "java.base/java.util.ArrayList.forEach(Unknown Source)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "java.base/java.util.ArrayList.forEach(Unknown Source)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)",
            "org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)",
            "org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)",
            "org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)",
            "org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)",
            "org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)",
            "org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)",
            "org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)",
            "org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)"
          ],
          "durationInNanos": 111967708
        }
      ],
      "durationInNanos": 111967708
    },
    {
      "className": "de.bas.bodo.woodle.adapter.web.WoodleViewTest",
      "testMethodName": "event_data_is_stored_in_s3_and_can_be_retrieved",
      "description": "event data is stored in s3 and can be retrieved",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 455333,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 225583,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 198500,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set s3 client",
              "words": [
                {
                  "value": "set s3 client"
                },
                {
                  "value": "s3Client",
                  "argumentInfo": {
                    "argumentName": "s3Client",
                    "formattedValue": "s3Client"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 882792,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user is on homepage",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "user is on homepage"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 239083,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user has test data",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user has test data"
                },
                {
                  "value": "Alice",
                  "argumentInfo": {
                    "argumentName": "name",
                    "formattedValue": "Alice"
                  }
                },
                {
                  "value": "alice@example.com",
                  "argumentInfo": {
                    "argumentName": "email",
                    "formattedValue": "alice@example.com"
                  }
                },
                {
                  "value": "My Poll",
                  "argumentInfo": {
                    "argumentName": "title",
                    "formattedValue": "My Poll"
                  }
                },
                {
                  "value": "Some description",
                  "argumentInfo": {
                    "argumentName": "description",
                    "formattedValue": "Some description"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 274209,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks schedule event button",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks schedule event button"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 604665208,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step1 form",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step1 form"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1216459,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks next",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks next"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 56875,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step2 form",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step2 form"
                },
                {
                  "value": "2024-03-20",
                  "argumentInfo": {
                    "argumentName": "date",
                    "formattedValue": "2024-03-20"
                  }
                },
                {
                  "value": "10:00",
                  "argumentInfo": {
                    "argumentName": "startTime",
                    "formattedValue": "10:00"
                  }
                },
                {
                  "value": "11:00",
                  "argumentInfo": {
                    "argumentName": "endTime",
                    "formattedValue": "11:00"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1016250,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks next",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks next"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 59791,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step3 form",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step3 form"
                },
                {
                  "value": "2024-06-20",
                  "argumentInfo": {
                    "argumentName": "expiryDate",
                    "formattedValue": "2024-06-20"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1732958,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks create poll",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks create poll"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 84416,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "event data should be stored in s3",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "event data should be stored in s3"
                }
              ],
              "status": "FAILED",
              "durationInNanos": 9312041,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "event data can be retrieved from s3",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "event data can be retrieved from s3"
                }
              ],
              "status": "SKIPPED",
              "durationInNanos": 0,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "errorMessage": "org.mockito.exceptions.verification.TooManyActualInvocations: \ns3Client.putObject(\n    \u003cany software.amazon.awssdk.services.s3.model.PutObjectRequest\u003e,\n    \u003cany software.amazon.awssdk.core.sync.RequestBody\u003e\n);\nWanted 1 time:\n-\u003e at software.amazon.awssdk.services.s3.S3Client.putObject(S3Client.java:19072)\nBut was 2 times:\n-\u003e at de.bas.bodo.woodle.domain.service.PollStorageService.storePoll(PollStorageService.java:44)\n-\u003e at de.bas.bodo.woodle.domain.service.PollStorageService.storePoll(PollStorageService.java:44)\n\n",
          "stackTrace": [
            "software.amazon.awssdk.services.s3.S3Client.putObject(S3Client.java:19072)",
            "de.bas.bodo.woodle.adapter.web.ThenWoodleOutcome.event_data_should_be_stored_in_s3(WoodleViewTest.java:400)",
            "de.bas.bodo.woodle.adapter.web.ThenWoodleOutcome$ByteBuddy$sn2TxSBC.event_data_should_be_stored_in_s3$accessor$zUt8vD4v(Unknown Source)",
            "de.bas.bodo.woodle.adapter.web.ThenWoodleOutcome$ByteBuddy$sn2TxSBC$auxiliary$AhyuhCJh.call(Unknown Source)",
            "de.bas.bodo.woodle.adapter.web.ThenWoodleOutcome$ByteBuddy$sn2TxSBC.event_data_should_be_stored_in_s3(Unknown Source)",
            "de.bas.bodo.woodle.adapter.web.WoodleViewTest.event_data_is_stored_in_s3_and_can_be_retrieved(WoodleViewTest.java:116)",
            "java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)",
            "org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)",
            "org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "java.base/java.util.ArrayList.forEach(Unknown Source)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "java.base/java.util.ArrayList.forEach(Unknown Source)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)",
            "org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)",
            "org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)",
            "org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)",
            "org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)",
            "org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)",
            "org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)",
            "org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)",
            "org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)"
          ],
          "durationInNanos": 624979208
        }
      ],
      "durationInNanos": 624979208
    },
    {
      "className": "de.bas.bodo.woodle.adapter.web.WoodleViewTest",
      "testMethodName": "user_can_navigate_through_scheduling_process",
      "description": "user can navigate through scheduling process",
      "tagIds": [],
      "explicitParameters": [],
      "derivedParameters": [],
      "casesAsTable": false,
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 708833,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 204291,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set mock mvc",
              "words": [
                {
                  "value": "set mock mvc"
                },
                {
                  "value": "org.springframework.test.web.servlet.MockMvc@2aac6fa7",
                  "argumentInfo": {
                    "argumentName": "mockMvc",
                    "formattedValue": "org.springframework.test.web.servlet.MockMvc@2aac6fa7"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 151875,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "set s3 client",
              "words": [
                {
                  "value": "set s3 client"
                },
                {
                  "value": "s3Client",
                  "argumentInfo": {
                    "argumentName": "s3Client",
                    "formattedValue": "s3Client"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 324291,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user is on homepage",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "user is on homepage"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 112041,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user has test data",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user has test data"
                },
                {
                  "value": "Alice",
                  "argumentInfo": {
                    "argumentName": "name",
                    "formattedValue": "Alice"
                  }
                },
                {
                  "value": "alice@example.com",
                  "argumentInfo": {
                    "argumentName": "email",
                    "formattedValue": "alice@example.com"
                  }
                },
                {
                  "value": "My Poll",
                  "argumentInfo": {
                    "argumentName": "title",
                    "formattedValue": "My Poll"
                  }
                },
                {
                  "value": "Some description",
                  "argumentInfo": {
                    "argumentName": "description",
                    "formattedValue": "Some description"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 185458,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks schedule event button",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks schedule event button"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1051458,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step1 form",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step1 form"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1024625,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks next",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks next"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 56750,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see step2 form",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see step2 form"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 243197000,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "step2 form should have all required fields",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "step2 form should have all required fields"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 2939334,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks back",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks back"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 89666,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see step1 form with previous data",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see step1 form with previous data"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 149247250,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step2 form",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step2 form"
                },
                {
                  "value": "2024-03-20",
                  "argumentInfo": {
                    "argumentName": "date",
                    "formattedValue": "2024-03-20"
                  }
                },
                {
                  "value": "10:00",
                  "argumentInfo": {
                    "argumentName": "startTime",
                    "formattedValue": "10:00"
                  }
                },
                {
                  "value": "11:00",
                  "argumentInfo": {
                    "argumentName": "endTime",
                    "formattedValue": "11:00"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 1226125,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks next",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks next"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 46833,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see step3 form",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see step3 form"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 109033125,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "step3 form should have expiry date",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "step3 form should have expiry date"
                },
                {
                  "value": "2024-06-20",
                  "argumentInfo": {
                    "argumentName": "expectedDate",
                    "formattedValue": "2024-06-20"
                  }
                }
              ],
              "status": "FAILED",
              "durationInNanos": 4813042,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks back",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks back"
                }
              ],
              "status": "SKIPPED",
              "durationInNanos": 0,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see step2 form with previous data",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see step2 form with previous data"
                }
              ],
              "status": "SKIPPED",
              "durationInNanos": 0,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user fills step3 form",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "user fills step3 form"
                },
                {
                  "value": "2024-06-20",
                  "argumentInfo": {
                    "argumentName": "expiryDate",
                    "formattedValue": "2024-06-20"
                  }
                }
              ],
              "status": "SKIPPED",
              "durationInNanos": 0,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user clicks create poll",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "user clicks create poll"
                }
              ],
              "status": "SKIPPED",
              "durationInNanos": 0,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "user should see summary page",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "user should see summary page"
                }
              ],
              "status": "SKIPPED",
              "durationInNanos": 0,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "summary page should show all entered data",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "summary page should show all entered data"
                }
              ],
              "status": "SKIPPED",
              "durationInNanos": 0,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "summary page should show event url",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "summary page should show event url"
                }
              ],
              "status": "SKIPPED",
              "durationInNanos": 0,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "FAILED",
          "errorMessage": "org.opentest4j.AssertionFailedError: \nexpected: \"2024-06-20\"\n but was: \"\"",
          "stackTrace": [
            "java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(Unknown Source)",
            "de.bas.bodo.woodle.adapter.web.ThenWoodleOutcome.step3_form_should_have_expiry_date(WoodleViewTest.java:367)",
            "de.bas.bodo.woodle.adapter.web.ThenWoodleOutcome$ByteBuddy$sn2TxSBC.step3_form_should_have_expiry_date$accessor$zUt8vD4v(Unknown Source)",
            "de.bas.bodo.woodle.adapter.web.ThenWoodleOutcome$ByteBuddy$sn2TxSBC$auxiliary$KJR72pu6.call(Unknown Source)",
            "de.bas.bodo.woodle.adapter.web.ThenWoodleOutcome$ByteBuddy$sn2TxSBC.step3_form_should_have_expiry_date(Unknown Source)",
            "de.bas.bodo.woodle.adapter.web.WoodleViewTest.user_can_navigate_through_scheduling_process(WoodleViewTest.java:94)",
            "java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)",
            "org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)",
            "org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)",
            "org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)",
            "org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)",
            "org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)",
            "org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "java.base/java.util.ArrayList.forEach(Unknown Source)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "java.base/java.util.ArrayList.forEach(Unknown Source)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)",
            "org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)",
            "org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)",
            "org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)",
            "org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)",
            "org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)",
            "org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)",
            "org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)",
            "org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)",
            "org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)",
            "org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)",
            "org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)",
            "org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)",
            "org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)",
            "org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)"
          ],
          "durationInNanos": 518744875
        }
      ],
      "durationInNanos": 518744875
    }
  ],
  "tagMap": {}
}